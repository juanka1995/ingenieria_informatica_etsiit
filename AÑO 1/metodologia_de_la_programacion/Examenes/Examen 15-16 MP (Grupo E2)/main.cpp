/**@file main.cpp@briefUniversidad de GranadaMetodología de la Programación IExamen de laboratorioPor favor, rellene las funciones que se indican*/#include <iostream>#include <fstream>#include <string>using namespace std;/**@brief Imprime el contenido de un vector de string@param v 	Vector de string@param n	Número de elementos que contiene @a v*/void imprimirVector(string *v, int n)  {	cout << n << " elementos" << endl;	for (int i=0; i<n; i++)		cout << "["<<i<<"] = " << v[i] << endl;}int main()  {	string *A=NULL, *B=NULL, *Resultado=NULL;	int elemA, elemB, elemResultado=0,c=0;	ifstream FichA, FichB;	bool existe;	/// Examen: Leer fichero en vector A	FichA.open("mod3A.txt");	FichA >> elemA;	A=new string[elemA];	for(int i=0;i<elemA;i++)		FichA >> A[i];	FichA.close();	imprimirVector(A, elemA);	/// Examen: Leer fichero en vector B	FichB.open("mod3B.txt");	FichB >> elemB;	B=new string[elemB];	for(int i=0;i<elemB;i++)		FichB >> B[i];	FichB.close();	imprimirVector(B, elemB);	/// Examen: Calcular resultado	for(int i=0;i<elemA;i++){		existe=false;		for(int j=0;j<elemB && !existe;j++){			if(A[i]==B[j])				existe=true;		}		if(!existe)			elemResultado++;	}	Resultado=new string[elemResultado];	for(int i=0;i<elemA;i++){		existe=false;		for(int j=0;j<elemB && !existe;j++){			if(A[i]==B[j])				existe=true;		}		if(!existe){			Resultado[c]=A[i];			c++;		}	}	/// Examen: Mostrar resultado	imprimirVector(Resultado, elemResultado);	/// Examen: Terminación del programa	delete [] A;	delete [] B;	delete [] Resultado;	A=B=Resultado=0;	return 0;}