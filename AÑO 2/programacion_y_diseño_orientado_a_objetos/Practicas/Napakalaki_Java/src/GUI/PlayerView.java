/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


/**
 *
 * @author guillermo
 */
import NapakalakiGame.Napakalaki;
import NapakalakiGame.Player;
import NapakalakiGame.Treasure;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;

public class PlayerView extends javax.swing.JPanel {
    
    private Player playerModel;
    private Napakalaki napakalakiModel;
    
    /**
     * Creates new form PlayerView
     */
    public PlayerView() {
        initComponents();
    }
    /*
        playerNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        levelText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        deadText = new javax.swing.JTextArea();
        levelLabel = new javax.swing.JLabel();
        deadLabel = new javax.swing.JLabel();
        tVisibleLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tVisibleText = new javax.swing.JTextArea();
        tHiddenLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tHiddenText = new javax.swing.JTextArea();
    */
    public void setPlayer(Player p){
        playerModel = p;
        playerNameLabel.setText(playerModel.getName());
        levelText.setText(Integer.toString(playerModel.getLevels()));
        deadText.setText(playerModel.isDead()?"Yes":"No");
        cultistText.setText(playerModel.isACultistPlayer()?"Yes":"No");
        enemyText.setText(playerModel.getEnemyName());
        canIStealText.setText(playerModel.canISteal()?"Yes":"No");
        pendingBadConsequenceView1.setBadConsequence(playerModel.getPendingBadConsequence());
        fillTreasurePanel(tVisiblePanel, playerModel.getVisibleTreasures());
        fillTreasurePanel(tHiddenPanel, playerModel.getHiddenTreasures());
        repaint();
    }
    
    public void setNapakalaki(Napakalaki n){
        napakalakiModel = n;
    }
    
    private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
        // Se recorren los tesoros que contiene el panel,
        // almacenando en un vector aquellos que est치n seleccionados.
        // Finalmente se devuelve dicho vector.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if ( tv.isSelected() )
                output.add ( tv.getTreasure() );
        }
        return output;
    }
    
    private void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) {
        // Se elimina la informaci칩n antigua
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y a침adiendo sus vistas
        // al panel
        for (Treasure t : aList) {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t);
            aTreasureView.setVisible (true);
            aPanel.add (aTreasureView);
        }
        // Se fuerza la actualizaci칩n visual del panel
        aPanel.repaint();
        aPanel.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        levelText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        deadText = new javax.swing.JTextArea();
        levelLabel = new javax.swing.JLabel();
        deadLabel = new javax.swing.JLabel();
        tVisibleLabel = new javax.swing.JLabel();
        tHiddenLabel = new javax.swing.JLabel();
        tVisiblePanel = new javax.swing.JPanel();
        tHiddenPanel = new javax.swing.JPanel();
        stealButton = new javax.swing.JButton();
        makeVisibleButton = new javax.swing.JButton();
        discardTreasureButton = new javax.swing.JButton();
        discardAllTreasuresButton = new javax.swing.JButton();
        pendingBadConsequenceView1 = new GUI.PendingBadConsequenceView();
        cultistLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cultistText = new javax.swing.JTextArea();
        enemyLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        enemyText = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        canIStealText = new javax.swing.JTextArea();
        canIStealLabel = new javax.swing.JLabel();

        playerNameLabel.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        playerNameLabel.setText("jLabel1");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        levelText.setEditable(false);
        levelText.setColumns(20);
        levelText.setRows(5);
        levelText.setFocusable(false);
        jScrollPane1.setViewportView(levelText);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        deadText.setEditable(false);
        deadText.setColumns(20);
        deadText.setRows(5);
        deadText.setFocusable(false);
        jScrollPane2.setViewportView(deadText);

        levelLabel.setText("Level:");

        deadLabel.setText("Dead:");

        tVisibleLabel.setText("Visible treasures:");

        tHiddenLabel.setText("Hidden treasures:");

        tVisiblePanel.setBackground(new java.awt.Color(255, 255, 255));
        tVisiblePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tHiddenPanel.setBackground(new java.awt.Color(255, 255, 255));
        tHiddenPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        stealButton.setText("Steal Treasure");
        stealButton.setEnabled(false);
        stealButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stealButtonActionPerformed(evt);
            }
        });

        makeVisibleButton.setText("Make Visible");
        makeVisibleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeVisibleButtonActionPerformed(evt);
            }
        });

        discardTreasureButton.setText("Discard Treasures");
        discardTreasureButton.setEnabled(false);
        discardTreasureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardTreasureButtonActionPerformed(evt);
            }
        });

        discardAllTreasuresButton.setText("Discard All Treasures");
        discardAllTreasuresButton.setEnabled(false);
        discardAllTreasuresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardAllTreasuresButtonActionPerformed(evt);
            }
        });

        pendingBadConsequenceView1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cultistLabel.setText("Cultist:");

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        cultistText.setEditable(false);
        cultistText.setColumns(20);
        cultistText.setRows(5);
        cultistText.setFocusable(false);
        jScrollPane3.setViewportView(cultistText);

        enemyLabel.setText("Enemy:");

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        enemyText.setEditable(false);
        enemyText.setColumns(20);
        enemyText.setRows(5);
        enemyText.setFocusable(false);
        jScrollPane4.setViewportView(enemyText);

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        canIStealText.setEditable(false);
        canIStealText.setColumns(20);
        canIStealText.setRows(5);
        canIStealText.setFocusable(false);
        jScrollPane5.setViewportView(canIStealText);

        canIStealLabel.setText("CanISteal:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(canIStealLabel)
                                    .addComponent(enemyLabel))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(levelLabel)
                                    .addComponent(cultistLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(deadLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pendingBadConsequenceView1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tVisibleLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(stealButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(makeVisibleButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(discardTreasureButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(discardAllTreasuresButton))
                            .addComponent(tHiddenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tHiddenLabel)
                            .addComponent(tVisiblePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(pendingBadConsequenceView1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(playerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(levelLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deadLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cultistLabel)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(enemyLabel)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(canIStealLabel)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tVisibleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tVisiblePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tHiddenLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tHiddenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(stealButton)
                        .addComponent(makeVisibleButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(discardTreasureButton)
                        .addComponent(discardAllTreasuresButton)))
                .addContainerGap(217, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void makeVisibleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeVisibleButtonActionPerformed
        // Recopilar informacion de la GUI
        ArrayList<Treasure> selHidden = getSelectedTreasures(tHiddenPanel);
        // Enviar mensajes al modelo para desarrollar la accion
        napakalakiModel.makeTreasuresVisible(selHidden);
        // Actualizar la vista
        setPlayer(playerModel);
    }//GEN-LAST:event_makeVisibleButtonActionPerformed

    public void enabledAllButtonNapakalakiView(){
        this.stealButton.setEnabled(playerModel.canISteal());
        this.discardTreasureButton.setEnabled(true);
        this.discardAllTreasuresButton.setEnabled(true);
        this.makeVisibleButton.setEnabled(true);
    }
    
    public void disabledAllButtonNapakalakiView(){
        this.stealButton.setEnabled(false);
        this.discardTreasureButton.setEnabled(false);
        this.discardAllTreasuresButton.setEnabled(false);
        this.makeVisibleButton.setEnabled(false);
    }
    
    public void enableAfterNextButton(){
        disabledAllButtonNapakalakiView();
        this.makeVisibleButton.setEnabled(true);
        setPlayer(playerModel);
    }
    
    private void discardTreasureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardTreasureButtonActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures(tHiddenPanel);
        ArrayList<Treasure> selVisible = getSelectedTreasures(tVisiblePanel);
        napakalakiModel.discardHiddenTreasures(selHidden);
        napakalakiModel.discardVisibleTreasures(selVisible);
        // Actualizo la vista
        setPlayer(napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_discardTreasureButtonActionPerformed

    private void discardAllTreasuresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardAllTreasuresButtonActionPerformed
        playerModel.discardAllTreasures();
        // Actualizo la vista
        setPlayer(playerModel);
    }//GEN-LAST:event_discardAllTreasuresButtonActionPerformed

    private void stealButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stealButtonActionPerformed
        if(playerModel.canISteal()){
            playerModel.stealTreasure();
            stealButton.setEnabled(playerModel.canISteal());
        }
        setPlayer(playerModel);
    }//GEN-LAST:event_stealButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel canIStealLabel;
    private javax.swing.JTextArea canIStealText;
    private javax.swing.JLabel cultistLabel;
    private javax.swing.JTextArea cultistText;
    private javax.swing.JLabel deadLabel;
    private javax.swing.JTextArea deadText;
    private javax.swing.JButton discardAllTreasuresButton;
    private javax.swing.JButton discardTreasureButton;
    private javax.swing.JLabel enemyLabel;
    private javax.swing.JTextArea enemyText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextArea levelText;
    private javax.swing.JButton makeVisibleButton;
    private GUI.PendingBadConsequenceView pendingBadConsequenceView1;
    private javax.swing.JLabel playerNameLabel;
    private javax.swing.JButton stealButton;
    private javax.swing.JLabel tHiddenLabel;
    private javax.swing.JPanel tHiddenPanel;
    private javax.swing.JLabel tVisibleLabel;
    private javax.swing.JPanel tVisiblePanel;
    // End of variables declaration//GEN-END:variables
}
