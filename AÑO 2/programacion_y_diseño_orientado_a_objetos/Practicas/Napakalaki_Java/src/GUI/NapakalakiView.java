/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import NapakalakiGame.CombatResult;
import NapakalakiGame.Napakalaki;

/**
 *
 * @author guillermogotre
 */
public class NapakalakiView extends javax.swing.JFrame {
    
    private Napakalaki napakalakiModel;
    
    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
        initComponents();
    }
    
    public void setNapakalaki(Napakalaki np){
        napakalakiModel = np;
        // Asigno al JPanel del player con el player actual
        playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
        // Asigno al JPanel del mosntruo con el mosntruo actual
        monsterView1.setMonster(napakalakiModel.getCurrentMonster());
        // Asigno al JPanel del player la instancia de napakalaki 
        // para poder realizar los correspondientes cambios en la vista
        // de player
        playerView1.setNapakalaki(np);
        // Actualizo los cambios en la vista actual
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerView1 = new GUI.PlayerView();
        monsterView1 = new GUI.MonsterView();
        combatResultLabel = new javax.swing.JLabel();
        meetMonsterButton = new javax.swing.JButton();
        combatButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Napakalaki Game");
        setLocationByPlatform(true);

        playerView1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        monsterView1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        combatResultLabel.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
        combatResultLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        meetMonsterButton.setText("Meet the monster");
        meetMonsterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetMonsterButtonActionPerformed(evt);
            }
        });

        combatButton.setText("Combat!");
        combatButton.setEnabled(false);
        combatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combatButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next turn");
        nextButton.setEnabled(false);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playerView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(monsterView1, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
            .addComponent(combatResultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(meetMonsterButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combatButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(playerView1, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monsterView1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combatResultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(meetMonsterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void meetMonsterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetMonsterButtonActionPerformed
        if (!this.nextButton.isEnabled()) {
            this.combatButton.setEnabled(true);
            this.playerView1.disabledAllButtonNapakalakiView();
        }
        // Hago el JPanel del mosntruo visible
        this.monsterView1.setVisible(true);
    }//GEN-LAST:event_meetMonsterButtonActionPerformed

    private void combatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combatButtonActionPerformed
        CombatResult combat = napakalakiModel.developCombat();
        switch(combat){
            case WINGAME:
                this.combatResultLabel.setText("¡¡¡ H A S  G A N A D O  L A  P A R T I D A !!!");
                System.exit(0);
            break;
            case WIN :
              this.combatResultLabel.setText("Ganaste el combate");
            break;
            case LOSE :
              this.combatResultLabel.setText("Has perdido el combate, te toca cumplir el mal rollo");
            break;
            case LOSEANDCONVERT :
              this.combatResultLabel.setText("Has perdido el combate, y te has convertido en sectario.\n No obstante, tienes que cumplir el mal rollo");
            break;
        }
        this.playerView1.enabledAllButtonNapakalakiView();
        this.combatButton.setEnabled(false);
        this.nextButton.setEnabled(true);
        // Llamo al setNapakalaki para que surjan efecto los cambios
        setNapakalaki(napakalakiModel);
    }//GEN-LAST:event_combatButtonActionPerformed

    // Basado en el metodo nextTurnIsAllowed de napalaki
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if(napakalakiModel.getCurrentPlayer() == null){
            this.nextButton.setEnabled(false);
            this.combatButton.setEnabled(false);
            this.playerView1.enableAfterNextButton();
            napakalakiModel.nextTurn();
            this.combatResultLabel.setText("");
            // Llamo al setNapakalaki para que surjan efecto los cambios
            setNapakalaki(napakalakiModel);  
        }
        else{
            // Si ha cumplido el mal rollo puede continuar
            if( napakalakiModel.getCurrentPlayer().validState() ){
                this.nextButton.setEnabled(false);
                this.combatButton.setEnabled(false);
                this.playerView1.enableAfterNextButton();
                napakalakiModel.nextTurn();
                this.combatResultLabel.setText("");
                // Llamo al setNapakalaki para que surjan efecto los cambios
                setNapakalaki(napakalakiModel);
            }
            else{
                this.combatResultLabel.setText("No cumples las condiciones para pasar de turno.");
            }
        } 
    }//GEN-LAST:event_nextButtonActionPerformed

    
    public void showView(){
        this.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton combatButton;
    private javax.swing.JLabel combatResultLabel;
    private javax.swing.JButton meetMonsterButton;
    private GUI.MonsterView monsterView1;
    private javax.swing.JButton nextButton;
    private GUI.PlayerView playerView1;
    // End of variables declaration//GEN-END:variables
}
